endian: big
unit: byte
Package:
    TCP:
        Source Port: uint16
        Destination Port: uint16
        Sequence Number: raw,4
        Acknowledgement Number: raw,4
        Header Length: uint8,4bit
        Flags: raw,12bit
        Window: raw,2
        Checksum: raw,2
        Urgent Pointer: raw,2
        Options: # 字节数需要是4的倍数，不足补0
            isList: true
            type: Option
            operator: |
                this.SetLength(getNodeResult("../Header Length")*4 - 20)
                for {
                    ele = this.NewElement()
                    if ele.GetRemainingSpace() == 0{
                        return
                    }
                    ele.Process()
                    if ele.GetSubNode("Kind").Result() == 0 {
                        return
                    }
                }
        Payload: raw

Option:
    operator: |
        n = this.GetSubNode("Kind").Process()
        switch n {
        case 1:
            break
        default:
            this.GetSubNode("Length").Process()
            if this.GetSubNode("Data").GetRemainingSpace() != 0 {
                this.GetSubNode("Data").Process()
            }    
        }
    length-from-field: Length
    length-from-field-multiply: 8
    Kind: uint8
    Length: uint8
    Data: raw
TLS: "import:tls.yaml;node:Package.TLS"
HTTP: "import:http.yaml;node:Package.HTTP"