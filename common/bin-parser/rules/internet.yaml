endian: big
Package:
  Ethernet:
    Destination: raw,6
    Source: raw,6
    Type: raw,2
  Internet:
    operator: |
      var protocol
      var version
      this.ForEachChild(node => {
        res = node.Process()
        switch node.Name {
          case "Version":
            version = res
          case "Protocol":
            protocol = res
        }
      })
      parent = this.GetParent()
      switch protocol {
        case 6:
          parent.AppendNode(getRootNode("TCP"))
          parent.GetSubNode("TCP").Process()
        case 17:
          parent.AppendNode(getRootNode("UDP"))
          parent.GetSubNode("TCP").Process()
      }
    length-from-field: Header Length
    length-from-field-multiply: 32
    Version: uint8,4bit
    Header Length: uint8,4bit
    Type of Service: raw,1
    Total Length: uint16
    Identification: raw,2
    Flags And Fragment Offset : raw,2
    Time to Live: raw,1
    Protocol: uint8
    Header Checksum: raw,2
    Source: raw,4
    Destination: raw
TCP: "import:tcp.yaml;node:@TCP"
UDP: "import:udp.yaml;node:@UDP"

